<apex:page standardController="Planning_Period__c" extensions="JBPKanbanController" showHeader="false"  sidebar="false" applyHtmlTag="false" applyBodyTag="false" standardStylesheets="false"> 

    <html>
        <head>
            
            <meta http-equiv="Content-Type" content="text/html; charset=windows-1252" />
            <title>Member Avatar</title>
            <style>
            .webix_layout_space{background:#fff!important;}
            </style>
            <meta name="viewport" content="initial-scale = 1.0, maximum-scale = 1.0, user-scalable = no" />
            
            <!-- <script src="{!URLFOR($Resource.kanban, '/webix.js')}" type="text/javascript">
                </script> -->
            <!-- kanbanJS below is Webix.js with changes -->
            <script src="{!URLFOR($Resource.kanbanJS)}" type="text/javascript">
                </script>
            <script src="{!URLFOR($Resource.kanban, '/kanban.js')}" type="text/javascript"> 
                </script>
                 
            <link rel="stylesheet" href="//maxcdn.bootstrapcdn.com/font-awesome/4.3.0/css/font-awesome.min.css" />
            
            <link rel="stylesheet" type="text/css" href="{!URLFOR($Resource.kanban, '/webix.css')}" />
            <link rel="stylesheet" type="text/css" href="{!URLFOR($Resource.kanban, '/kanban.css')}" />
            
            <script src="{!URLFOR($Resource.kanban, '/data.js')}">
                </script>
            <script src="{!URLFOR($Resource.kanban, '/types.js')}">
                </script>
            <link rel="stylesheet" type="text/css" href="{!URLFOR($Resource.kanban, '/style.css')}" />
            
            <style type="text/css" media="screen">
                
                html, body{ height:100%; }
                
                @font-face {
                    font-family: 'ProximaNovaRegular';
                    src: url('https://www.sfdcstatic.com/cdn/fonts/ProximaNova/proximanova-reg-webfont.eot');
                    src: url('https://www.sfdcstatic.com/cdn/fonts/ProximaNova/proximanova-reg-webfont.eot?#iefix') format('embedded-opentype'),
                         url('https://www.sfdcstatic.com/cdn/fonts/ProximaNova/proximanova-reg-webfont.woff') format('woff'),
                         url('https://www.sfdcstatic.com/cdn/fonts/ProximaNova/proximanova-reg-webfont.ttf') format('truetype'),
                         url('https://www.sfdcstatic.com/cdn/fonts/ProximaNova/proximanova-reg-webfont.svg#ProximaNovaRegular') format('svg');
                    font-weight: normal;
                    font-style: normal;
                }
                @font-face {
                    font-family: 'ProximaNovaLight';
                    src: url('https://www.sfdcstatic.com/cdn/fonts/ProximaNova/proximanova-light-webfont.eot');
                    src: url('https://www.sfdcstatic.com/cdn/fonts/ProximaNova/proximanova-light-webfont.eot?#iefix') format('embedded-opentype'),
                         url('https://www.sfdcstatic.com/cdn/fonts/ProximaNova/proximanova-light-webfont.woff') format('woff'),
                         url('https://www.sfdcstatic.com/cdn/fonts/ProximaNova/proximanova-light-webfont.ttf') format('truetype'),
                         url('https://www.sfdcstatic.com/cdn/fonts/ProximaNova/proximanova-light-webfont.svg#ProximaNovaLight') format('svg');
                    font-weight: normal;
                    font-style: normal;
                }
                @font-face {
                    font-family: 'ProximaNovaSemiBold';
                    src: url('https://www.sfdcstatic.com/cdn/fonts/ProximaNova/proximanova-sbold-webfont.eot');
                    src: url('https://www.sfdcstatic.com/cdn/fonts/ProximaNova/proximanova-sbold-webfont.eot?#iefix') format('embedded-opentype'),
                         url('https://www.sfdcstatic.com/cdn/fonts/ProximaNova/proximanova-sbold-webfont.woff') format('woff'),
                         url('https://www.sfdcstatic.com/cdn/fonts/ProximaNova/proximanova-sbold-webfont.ttf') format('truetype'),
                         url('https://www.sfdcstatic.com/cdn/fonts/ProximaNova/proximanova-sbold-webfont.svg#ProximaNovaSemiBold') format('svg');
                    font-weight: normal;
                    font-style: normal;
                }
                * { -webkit-font-smoothing: antialiased; }
                
                body  { font-family: ProximaNovaRegular, Arial, sans-serif; }
                
                
                /** KANBAN EDITS */
                .webix_kanban_body {
                    font-size: 14px;
                    line-height: 20px;
                }
                
                .webix_accordionitem_header {
                    font-family: ProximaNovaSemiBold, Arial, sans-serif;
                    font-size: 16px;
                }
                
            </style>
            
        </head>
        
        <body class=" webix_full_screen webix_noselect">
            <script type="text/javascript">
            
            function onBeforeDrag(dragContext){
                webix.message("Drag has been started");
                return true
            }
            
            function onBeforeDragIn(dragContext,e,list){
                
                // item id
                var item =this.getItem(dragContext.start);
                
                // if we move an item from one list to another
                if(dragContext.from != dragContext.to){
                    var statusFrom = dragContext.from.config.status;
                    var statusTo = dragContext.to.config.status;
                    var statusIndex = {"new":0,"work":1, "test": 2, "done":3};
                    var diff = Math.abs(statusIndex[statusFrom] - statusIndex[statusTo]);
                    if(diff>1){
                        return false;
                    }
                }
                return true;
            }
            
            function onAfterDrop(dragContext,e,list){
                
                // item id
                var item =this.getItem(dragContext.start);
                
                // if we move an item from one list to another
                if(dragContext.from != dragContext.to){
                    var status = dragContext.to.config.status;
                    // show a message with new status and order
                    webix.message("Item '"+item.text+"' was moved into '"+status+"' column to the "+item.$index +" position");
                }
                else
                    webix.message("Item '"+item.text+"' was moved to the "+item.$index +" position");
            }
            
            function onStatusChange(itemId,newStatus,list,context,ev) {
                console.log('*** in onStatusChange ***');
                console.log('itemId', itemId);
                console.log('newStatus', newStatus);
                console.log('list', list); 
                console.log('context', context );
                console.log('ev', ev );
                
                PP_KanbanCtrl.updateTaskStatus(itemId, newStatus, function(result, event){
                    if(event.status) {
                        console.log("updateTaskStatus Success!!");
                        console.log(result);
                    }
                    else if (event.type === 'Exception') {
                        console.log("Some exception in updateTaskStatus");
                    }
                    else {
                        console.log("Some other error in updateTaskStatus");
                    }
                });
            }
            
            webix.ready(function(){
                webix.ui({
                    view:"kanban", 
                    type:"space",
                    on:{
                        onListBeforeDrag: onBeforeDrag,
                        onListBeforeDragIn: onBeforeDragIn,
                        onListAfterDrop: onAfterDrop,
                        onAfterStatusChange: onStatusChange, 
                        
                        onListItemClick: function(id,e,node,list){
                            webix.message("Item '"+this.getItem(id).text+"' has been clicked.");
                        },
                        onListBeforeSelect: function(id,state,list){
                            webix.message("Item '"+this.getItem(id).text+"' will be selected.");
                            return true;
                        },
                        onListAfterSelect: function(id,state,list){
                            webix.message("Item '"+this.getItem(id).text+"' has been selected.");
                        }
                    },
                    cols: {!JsonHeading},
                    data: {!taskSet}
                    
                    /* cols:[
                        { 
                            header:"Backlog",
                            body:{ view:"kanbanlist", status:"new", type: "avatars" }
                        },
                        { 
                            header:"In Progress",
                            body:{ view:"kanbanlist", status:"work", type: "avatars"}
                        },
                        { 
                            header:"Testing",
                            body:{ view:"kanbanlist", status:"test", type: "avatars" }
                        },
                        { 
                            header:"Done",
                            body:{ view:"kanbanlist", status:"done", type: "avatars" }
                        }
                    ],*/
                    //data:base_task_set
                    //data:order_task_set
                    //data:task_set
                    
                });
            });
            </script>
            
        </body>
    </html>
</apex:page>